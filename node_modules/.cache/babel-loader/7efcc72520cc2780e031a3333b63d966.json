{"ast":null,"code":"import { drinkSorter } from \"./drinkSorter\";\nimport { passedDrinksCounter } from \"./passedDrinkCounter\"; // https://docs.google.com/document/d/1J8gMJdqBdbox462-ERcvf5BYWfcBHa0Hvqrgw0T2bLs/edit\n\nexport const graphDataCalculator = _ref => {\n  let {\n    widmarkFactor,\n    absorptionRate,\n    eliminationRate,\n    weight,\n    drinks\n  } = _ref;\n  let descendingDrinks = drinkSorter(drinks, false);\n  let justDrank = parseFloat(descendingDrinks[descendingDrinks.length - 1].timePassed) < 0.3;\n  let maxTime = parseFloat(descendingDrinks[0].timePassed);\n  let curBacIdx = maxTime / 0.01 - 1;\n  let Time = 0;\n  let graphBacData = [];\n  let Bac = 0;\n\n  while (Bac >= 0) {\n    Bac = 0;\n\n    for (const drink of descendingDrinks) {\n      if (parseFloat(drink.timePassed) > maxTime - Time) {\n        const activeTime = parseFloat(drink.timePassed) - (maxTime - Time);\n        const alcoholMass = parseFloat(drink.volume) * 0.0007893 * (parseFloat(drink.abv) / 100);\n        const numerator = alcoholMass * (1 - Math.E ** (-absorptionRate * activeTime));\n        const denominator = widmarkFactor * weight;\n        Bac = Bac + numerator / denominator * 100;\n      }\n    }\n\n    if (Bac - Time * eliminationRate < 0 && Time > maxTime) {\n      graphBacData.push(0);\n      break;\n    } else if (Bac - Time * eliminationRate < 0) {\n      let soberTime = maxTime - Time;\n\n      if (descendingDrinks.length === 1) {\n        graphBacData = graphBacData.concat(Array(Math.round(soberTime / 0.01)).fill(0));\n        curBacIdx = graphBacData.length - 1;\n        break;\n      } else {\n        const passsedDrinks = passedDrinksCounter(descendingDrinks, Time, maxTime);\n\n        if (passsedDrinks === descendingDrinks.length) {\n          graphBacData = graphBacData.concat(Array(Math.round(soberTime / 0.01)).fill(0));\n          curBacIdx = graphBacData.length - 1;\n          break;\n        } else {\n          soberTime = parseFloat(descendingDrinks[passsedDrinks - 1].timePassed) - Time - parseFloat(descendingDrinks[passsedDrinks].timePassed);\n          graphBacData = graphBacData.concat(Array(Math.round(soberTime / 0.01)).fill(0));\n          descendingDrinks.splice(0, passsedDrinks);\n          maxTime = parseFloat(descendingDrinks[0].timePassed);\n          Time = 0;\n        }\n      }\n    } else {\n      graphBacData.push((Bac - Time * eliminationRate) * 10);\n      Time += 0.01;\n    }\n  }\n\n  let soberingIdx = justDrank ? curBacIdx + 30 : curBacIdx;\n  return {\n    graphBacData,\n    currentBac: graphBacData[curBacIdx],\n    curBacIdx,\n    soberingIdx\n  };\n};","map":{"version":3,"names":["drinkSorter","passedDrinksCounter","graphDataCalculator","widmarkFactor","absorptionRate","eliminationRate","weight","drinks","descendingDrinks","justDrank","parseFloat","length","timePassed","maxTime","curBacIdx","Time","graphBacData","Bac","drink","activeTime","alcoholMass","volume","abv","numerator","Math","E","denominator","push","soberTime","concat","Array","round","fill","passsedDrinks","splice","soberingIdx","currentBac"],"sources":["D:/Soft/Desk 12.10/TestTS/src/utils/graphDataCalculator.ts"],"sourcesContent":["import { drinkType } from \"../types\"\nimport { drinkSorter } from \"./drinkSorter\"\nimport { passedDrinksCounter } from \"./passedDrinkCounter\"\n\n// https://docs.google.com/document/d/1J8gMJdqBdbox462-ERcvf5BYWfcBHa0Hvqrgw0T2bLs/edit\n\nexport const graphDataCalculator = ({\n  widmarkFactor,\n  absorptionRate,\n  eliminationRate,\n  weight,\n  drinks,\n}: {\n  widmarkFactor: number\n  absorptionRate: number\n  eliminationRate: number\n  weight: number\n  drinks: drinkType[]\n}) => {\n  let descendingDrinks = drinkSorter(drinks, false)\n\n  let justDrank =\n    parseFloat(descendingDrinks[descendingDrinks.length - 1].timePassed) < 0.3\n  let maxTime = parseFloat(descendingDrinks[0].timePassed)\n  let curBacIdx = maxTime / 0.01 - 1\n  let Time = 0\n  let graphBacData: number[] = []\n  let Bac = 0\n\n  while (Bac >= 0) {\n    Bac = 0\n    for (const drink of descendingDrinks) {\n      if (parseFloat(drink.timePassed) > maxTime - Time) {\n        const activeTime = parseFloat(drink.timePassed) - (maxTime - Time)\n        const alcoholMass =\n          parseFloat(drink.volume) * 0.0007893 * (parseFloat(drink.abv) / 100)\n        const numerator =\n          alcoholMass * (1 - Math.E ** (-absorptionRate * activeTime))\n        const denominator = widmarkFactor * weight\n        Bac = Bac + (numerator / denominator) * 100\n      }\n    }\n    if (Bac - Time * eliminationRate < 0 && Time > maxTime) {\n      graphBacData.push(0)\n      break\n    } else if (Bac - Time * eliminationRate < 0) {\n      let soberTime = maxTime - Time\n\n      if (descendingDrinks.length === 1) {\n        graphBacData = graphBacData.concat(\n          Array(Math.round(soberTime / 0.01)).fill(0)\n        )\n        curBacIdx = graphBacData.length - 1\n        break\n      } else {\n        const passsedDrinks = passedDrinksCounter(\n          descendingDrinks,\n          Time,\n          maxTime\n        )\n        if (passsedDrinks === descendingDrinks.length) {\n          graphBacData = graphBacData.concat(\n            Array(Math.round(soberTime / 0.01)).fill(0)\n          )\n          curBacIdx = graphBacData.length - 1\n          break\n        } else {\n          soberTime =\n            parseFloat(descendingDrinks[passsedDrinks - 1].timePassed) -\n            Time -\n            parseFloat(descendingDrinks[passsedDrinks].timePassed)\n          graphBacData = graphBacData.concat(\n            Array(Math.round(soberTime / 0.01)).fill(0)\n          )\n          descendingDrinks.splice(0, passsedDrinks)\n          maxTime = parseFloat(descendingDrinks[0].timePassed)\n          Time = 0\n        }\n      }\n    } else {\n      graphBacData.push((Bac - Time * eliminationRate) * 10)\n      Time += 0.01\n    }\n  }\n  let soberingIdx = justDrank ? curBacIdx + 30 : curBacIdx\n  return {\n    graphBacData,\n    currentBac: graphBacData[curBacIdx],\n    curBacIdx,\n    soberingIdx,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}